package proxy

//nolint:lll
type Config struct {
	DefaultTarget string   `default:":80" comment:"Default rule of select destination address.\nIt can be: IP (with default port 80), :Port (default - same IP as receive connection), IPv4:Port or [IPv6]:Port"`
	TargetMap     []string `comment:"Array of '-' separated pairs or IP:Port. For example:\n [\n   \"1.2.3.4:443-2.2.2.2:1234\",\n   \"3.3.3.3:333-[::1]:94\"\n \"]\n Mean: connections, accepted on 1.2.3.4:443 send to server 2.2.2.2:1234\n and connections accepted on 3.3.3.3:333 send to ipv6 ::1 port 94" commented:"true"`
	Headers       []string `comment:"Array of colon separated HeaderName:HeaderValue for add to request for backend. {{Value}} is special forms, which can internally parsing. Now it support only special values:\n {{CONNECTION_ID}} - Id of accepted connection, generated by lets-proxy\n {{HTTP_PROTO}} - set to http/https dependence incoming connections handled\n {{SOURCE_IP}} - Remote IP of incoming connection\n {SOURCE_PORT}} - Remote port of incoming connection\n {{SOURCE_IP}}:{{SOURCE_PORT}} - Remote IP:Port of incoming connection.\n Now it accepted only this special values, which must be exaxlty equal to examples. All other values send as is.\n But it can change and extend in future. Doesn't use {{...}} as own values.\n Example:\n [\"IP:{{SOURCE_IP}}\", \"Proxy:lets-proxy\", \"Protocol:{{HTTP_PROTO}}\" ]"`
}
